{"ast":null,"code":"var _jsxFileName = \"/Users/vitor/Repositories/Sharing/site/pages/[slug].js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Navbar from '../components/Layouts/Navbar';\nimport PageBanner from '../components/Common/PageBanner';\nimport BlogDetailsContent from '../components/Blog/BlogDetailsContent';\nimport Footer from '../components/Layouts/Footer';\nimport { NotionRenderer } from \"react-notion\";\nimport fetch from 'node-fetch';\nconst API_ENDPOINT = 'https://www.notion.so/api/v3';\nconst NOTION_TOKEN = '38823e20575022e59fa48474c8a7db5c184b4c08778f5fb2111867a5a344f0da0fd58de3098622b7714189bb7501eb745d13eade0ed4b76730d8e000f4dfceea89cc7ad703432a87188d39bc7fba';\nconst NOTION_BLOG_ID = 'f8cf0c8645db4088be56a1c37286fee2';\nexport const getAllPosts = async () => {\n  return await fetch(`https://notion-api.splitbee.io/v1/table/${NOTION_BLOG_ID}`).then(res => res.json());\n};\nexport async function getStaticProps({\n  params: {\n    slug\n  }\n}) {\n  // Get all posts again\n  const posts = await getAllPosts(); // Find the current blogpost by slug\n\n  const post = slug ? posts.find(t => t.Slug === slug) : null;\n\n  if (post && post.id) {\n    const blocks = await fetch(`https://notion-api.splitbee.io/v1/page/${post.id}`).then(res => res.json());\n    return {\n      props: {\n        blocks,\n        post\n      }\n    };\n  }\n\n  return {\n    props: {\n      blocks: [],\n      post: []\n    }\n  };\n}\n\nconst BlogDetails = ({\n  post,\n  blocks\n}) => {\n  if (!post || !blocks || post.length === 0 || blocks.length === 0) return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), __jsx(PageBanner, {\n    pageTitle: 'no-post',\n    homePageUrl: \"/\",\n    homePageText: \"Home\",\n    activePageText: 'no-post',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), __jsx(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }));\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(NavbarTwo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), __jsx(PageBanner, {\n    pageTitle: post.Title,\n    homePageUrl: \"/\",\n    homePageText: \"Home\",\n    activePageText: post.Title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), __jsx(BlogDetailsContent, {\n    blocks: blocks,\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), __jsx(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }));\n};\n\nexport async function getStaticPaths() {\n  const table = await getAllPosts();\n  return {\n    paths: table.map(row => row && row.Slug ? `/${row.Slug}` : '/no-post'),\n    fallback: true\n  };\n}\nexport default BlogDetails;","map":{"version":3,"sources":["/Users/vitor/Repositories/Sharing/site/pages/[slug].js"],"names":["React","Component","Navbar","PageBanner","BlogDetailsContent","Footer","NotionRenderer","fetch","API_ENDPOINT","NOTION_TOKEN","NOTION_BLOG_ID","getAllPosts","then","res","json","getStaticProps","params","slug","posts","post","find","t","Slug","id","blocks","props","BlogDetails","length","Title","getStaticPaths","table","paths","map","row","fallback"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Navbar from '../components/Layouts/Navbar';\r\nimport PageBanner from '../components/Common/PageBanner';\r\nimport BlogDetailsContent from '../components/Blog/BlogDetailsContent';\r\nimport Footer from '../components/Layouts/Footer';\r\nimport { NotionRenderer } from \"react-notion\"\r\nimport fetch from 'node-fetch'\r\n\r\nconst API_ENDPOINT = 'https://www.notion.so/api/v3'\r\nconst NOTION_TOKEN = '38823e20575022e59fa48474c8a7db5c184b4c08778f5fb2111867a5a344f0da0fd58de3098622b7714189bb7501eb745d13eade0ed4b76730d8e000f4dfceea89cc7ad703432a87188d39bc7fba'\r\nconst NOTION_BLOG_ID = 'f8cf0c8645db4088be56a1c37286fee2'\r\n\r\nexport const getAllPosts = async () => {\r\n    return await fetch(\r\n    `https://notion-api.splitbee.io/v1/table/${NOTION_BLOG_ID}`\r\n  ).then((res) => res.json());\r\n}\r\n\r\nexport async function getStaticProps({params: { slug }}) {\r\n    // Get all posts again\r\n    const posts = await getAllPosts();\r\n\r\n    // Find the current blogpost by slug\r\n    const post = slug ? posts.find((t) => t.Slug === slug) : null\r\n\r\n    if (post && post.id) {\r\n        const blocks = await fetch(\r\n            `https://notion-api.splitbee.io/v1/page/${post.id}`\r\n        ).then((res) => res.json());\r\n\r\n        return {\r\n            props: {\r\n              blocks,\r\n              post,\r\n            },\r\n        };\r\n    }\r\n    return {\r\n        props: {\r\n          blocks: [],\r\n          post: [],\r\n        },\r\n    };\r\n}\r\n\r\nconst BlogDetails = ({ post, blocks }) => {\r\n    if (!post ||\r\n        !blocks ||\r\n        post.length === 0 ||\r\n        blocks.length === 0)\r\n            return (\r\n                <React.Fragment>\r\n                    <Navbar />\r\n                    <PageBanner \r\n                        pageTitle={'no-post'} \r\n                        homePageUrl=\"/\" \r\n                        homePageText=\"Home\" \r\n                        activePageText={'no-post'}\r\n                    /> \r\n                    {/* No content */}\r\n                    <Footer/>\r\n                </React.Fragment>\r\n            )\r\n    return (\r\n        <React.Fragment>\r\n            <NavbarTwo />\r\n            <PageBanner \r\n                pageTitle={post.Title} \r\n                homePageUrl=\"/\" \r\n                homePageText=\"Home\" \r\n                activePageText={post.Title}\r\n            /> \r\n            <BlogDetailsContent blocks={blocks} post={post}/>\r\n            <Footer/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const table = await getAllPosts()\r\n  return {\r\n    paths: table.map((row) => row && row.Slug ? `/${row.Slug}` : '/no-post'),\r\n    fallback: true,\r\n  };\r\n}\r\n\r\nexport default BlogDetails"]},"metadata":{},"sourceType":"module"}