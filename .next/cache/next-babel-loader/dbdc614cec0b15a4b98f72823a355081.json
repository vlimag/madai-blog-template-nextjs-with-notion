{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/vitor/Repositories/Sharing/site/components/Blog/BlogThreeGrid.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport fetch from 'node-fetch';\n\nvar moment = require('moment');\n\nvar API_ENDPOINT = 'https://www.notion.so/api/v3';\nvar NOTION_TOKEN = '38823e20575022e59fa48474c8a7db5c184b4c08778f5fb2111867a5a344f0da0fd58de3098622b7714189bb7501eb745d13eade0ed4b76730d8e000f4dfceea89cc7ad703432a87188d39bc7fba';\nvar NOTION_BLOG_ID = 'f8cf0c8645db4088be56a1c37286fee2';\n\nvar BlogThreeGrid = /*#__PURE__*/function (_Component) {\n  _inherits(BlogThreeGrid, _Component);\n\n  function BlogThreeGrid(props) {\n    var _this;\n\n    _classCallCheck(this, BlogThreeGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BlogThreeGrid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function _callee() {\n      var posts;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(_this.getStaticProps());\n\n            case 2:\n              posts = _context.sent;\n\n              _this.setState({\n                posts: posts.props.posts.filter(function (post) {\n                  return post.Published;\n                })\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getAllPosts\", function _callee2() {\n      var allPosts;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"https://notion-api.splitbee.io/v1/table/\".concat(NOTION_BLOG_ID)).then(function (res) {\n                return res.json();\n              }));\n\n            case 2:\n              allPosts = _context2.sent;\n              console.log('ALLPOSTS', allPosts);\n              return _context2.abrupt(\"return\", allPosts);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getStaticProps\", function _callee3() {\n      var posts;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(_this.getAllPosts());\n\n            case 2:\n              posts = _context3.sent;\n              return _context3.abrupt(\"return\", {\n                props: {\n                  posts: posts\n                }\n              });\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    _this.state = {\n      posts: [],\n      page: 0,\n      category: '',\n      postsForPage: 12\n    };\n    return _this;\n  }\n\n  _createClass(BlogThreeGrid, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log('THISPOSTS', this.state.posts);\n      var _this$state = this.state,\n          page = _this$state.page,\n          postsForPage = _this$state.postsForPage;\n      var postIndex = page * postsForPage;\n      var posts = this.state.posts.filter(function (post) {\n        return _this2.state.category === '' ? true : post.Category.includes(_this2.state.category);\n      });\n      var pagItems = [];\n\n      var _loop = function _loop(i) {\n        var className = i === _this2.state.page ? 'page-numbers current' : 'page-numbers';\n        pagItems.push(__jsx(\"button\", {\n          onClick: function onClick() {\n            return _this2.setState({\n              page: i\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          className: className,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, i + 1)));\n      };\n\n      for (var i = 0; i < posts.length / this.state.postsForPage; i++) {\n        _loop(i);\n      }\n\n      var categories = this.state.posts.reduce(function (acc, curr) {\n        curr.Category.forEach(function (category) {\n          if (!acc.includes(category)) acc.push(category);\n        });\n        return acc;\n      }, []);\n      return __jsx(\"section\", {\n        className: \"blog-area ptb-110\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"category-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"category-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Categorias:\"), __jsx(\"div\", {\n        className: \"category-items-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        onClick: function onClick() {\n          return _this2.setState({\n            category: '',\n            page: 0\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: this.state.category === '' ? \"blog-category current\" : \"blog-category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Todas\")), categories.map(function (category) {\n        return __jsx(\"button\", {\n          onClick: function onClick() {\n            return _this2.setState({\n              category: category,\n              page: 0\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: _this2.state.category === category ? \"blog-category current\" : \"blog-category\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, category));\n      }))), __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, posts.length === 0 ? __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Em breve!!\") : posts.slice(postIndex, postIndex + postsForPage).filter(function (post) {\n        return _this2.state.category === '' ? true : post.Category.includes(_this2.state.category);\n      }).map(function (post) {\n        var image = post.image && post.image[0] && post.image[0].url || '';\n        return __jsx(\"div\", {\n          className: \"col-lg-4 col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"single-blog-post\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"entry-thumbnail\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, __jsx(Link, {\n          href: \"/blog/[slug]\",\n          as: \"/blog/\".concat(post.Slug),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, __jsx(\"img\", {\n          src: image,\n          alt: \"image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        })))), __jsx(\"div\", {\n          className: \"entry-post-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"entry-meta\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, __jsx(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, post.Authors.map(function (author) {\n          var authorArray = author.split('@');\n          var authorName = authorArray[0];\n          var authorURL = authorArray[1];\n          return __jsx(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, __jsx(Link, {\n            href: authorURL,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, __jsx(\"a\", {\n            target: \"_blank\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }, authorName)));\n        }), __jsx(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, moment(post.Date).format('DD/MM/YYYY')))), __jsx(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, __jsx(Link, {\n          href: \"/blog/[slug]\",\n          as: \"/blog/\".concat(post.Slug),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, post.Title))), __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, post.Preview), __jsx(Link, {\n          href: \"/blog/[slug]\",\n          as: \"/blog/\".concat(post.Slug),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          className: \"learn-more-btn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, \"Leia mais \", __jsx(\"i\", {\n          className: \"flaticon-add\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }))))));\n      }), __jsx(\"div\", {\n        className: \"col-lg-12 col-sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"pagination-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        onClick: function onClick() {\n          return _this2.setState({\n            page: 0\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        className: \"prev page-numbers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"fas fa-angle-double-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }))), pagItems, __jsx(\"button\", {\n        onClick: function onClick() {\n          return _this2.setState({\n            page: pagItems.length - 1\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        className: \"next page-numbers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"fas fa-angle-double-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return BlogThreeGrid;\n}(Component);\n\nexport default BlogThreeGrid;","map":{"version":3,"sources":["/Users/vitor/Repositories/Sharing/site/components/Blog/BlogThreeGrid.js"],"names":["React","Component","Link","fetch","moment","require","API_ENDPOINT","NOTION_TOKEN","NOTION_BLOG_ID","BlogThreeGrid","props","getStaticProps","posts","setState","filter","post","Published","then","res","json","allPosts","console","log","getAllPosts","state","page","category","postsForPage","postIndex","Category","includes","pagItems","i","className","push","length","categories","reduce","acc","curr","forEach","map","slice","image","url","Slug","Authors","author","authorArray","split","authorName","authorURL","Date","format","Title","Preview"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Link from 'next/link';\r\nimport fetch from 'node-fetch'\r\n\r\nconst moment = require('moment')\r\n\r\nconst API_ENDPOINT = 'https://www.notion.so/api/v3'\r\nconst NOTION_TOKEN = '38823e20575022e59fa48474c8a7db5c184b4c08778f5fb2111867a5a344f0da0fd58de3098622b7714189bb7501eb745d13eade0ed4b76730d8e000f4dfceea89cc7ad703432a87188d39bc7fba'\r\nconst NOTION_BLOG_ID = 'f8cf0c8645db4088be56a1c37286fee2'\r\n\r\nclass BlogThreeGrid extends Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n          posts: [],\r\n          page: 0,\r\n          category: '',\r\n          postsForPage: 12\r\n        }\r\n      }\r\n    componentDidMount = async () => {\r\n        const posts = await this.getStaticProps()\r\n        this.setState({ posts: posts.props.posts.filter(post => post.Published) })\r\n    }\r\n    getAllPosts = async () => {\r\n        const allPosts = await fetch(\r\n        `https://notion-api.splitbee.io/v1/table/${NOTION_BLOG_ID}`\r\n      ).then((res) => res.json());\r\n        console.log('ALLPOSTS', allPosts)\r\n        return allPosts\r\n    }\r\n    getStaticProps = async () => {\r\n      const posts = await this.getAllPosts()\r\n      return {\r\n        props: {\r\n          posts\r\n        },\r\n      };\r\n    }\r\n    render() {\r\n        console.log('THISPOSTS', this.state.posts)\r\n        const { page, postsForPage } = this.state\r\n        const postIndex = page * postsForPage\r\n        const posts = this.state.posts\r\n            .filter(post => {\r\n                return this.state.category === '' ? true : post.Category.includes(this.state.category)\r\n            })\r\n        const pagItems = []\r\n        for(let i = 0; i < posts.length/this.state.postsForPage; i++){\r\n            let className = i === this.state.page ?  'page-numbers current' : 'page-numbers'\r\n            pagItems.push(\r\n                <button onClick={() => this.setState({page: i})}>\r\n                    <a className={className}>{i+1}</a>\r\n                </button>\r\n            )\r\n        }\r\n        const categories = this.state.posts.reduce((acc, curr) => {\r\n            curr.Category.forEach(category => {\r\n                if (!acc.includes(category)) acc.push(category)\r\n            })\r\n            return acc\r\n        }, [])\r\n        return (\r\n            <section className=\"blog-area ptb-110\">\r\n                <div className=\"container\">\r\n                    <div className=\"category-container\">\r\n                        <div className=\"category-title\">Categorias:</div>\r\n                        <div className='category-items-container'>\r\n                            <button onClick = {() => this.setState({category: '', page: 0})}>\r\n                                <div className={this.state.category === '' ? \"blog-category current\" : \"blog-category\"}>Todas</div>\r\n                            </button>\r\n                            {\r\n                                categories.map(category => (\r\n                                    <button onClick = {() => this.setState({category, page: 0})}>\r\n                                        <div className={this.state.category === category ? \"blog-category current\" : \"blog-category\"}>\r\n                                            {category}\r\n                                        </div>\r\n                                    </button>))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    {\r\n                        posts.length === 0 ? (<div>Em breve!!</div>) : posts.slice(postIndex, postIndex + postsForPage)\r\n                            .filter(post => {\r\n                                return this.state.category === '' ? true : post.Category.includes(this.state.category)\r\n                            })\r\n                            .map((post) => {\r\n                            const image = post.image && post.image[0] && post.image[0].url || ''\r\n                            return (\r\n                            <div className=\"col-lg-4 col-md-6\">\r\n                                <div className=\"single-blog-post\">\r\n                                    <div className=\"entry-thumbnail\">\r\n                                        <Link href=\"/blog/[slug]\" as={`/blog/${post.Slug}`}>\r\n                                            <a>\r\n                                                <img src={image} alt=\"image\" />\r\n                                            </a>\r\n                                        </Link>\r\n                                    </div>\r\n\r\n                                    <div className=\"entry-post-content\">\r\n                                    <div className=\"entry-meta\">\r\n                                        <ul>\r\n                                            {\r\n                                                post.Authors.map(author => {\r\n                                                    const authorArray = author.split('@')\r\n                                                    const authorName = authorArray[0]\r\n                                                    const authorURL = authorArray[1]\r\n                                                    return (\r\n                                                        <li>\r\n                                                            <Link href={authorURL}>\r\n                                                                <a target=\"_blank\">{authorName}</a>\r\n                                                            </Link>\r\n                                                        </li>\r\n                                                        )\r\n                                                })\r\n                                            }\r\n                                            <li>{moment(post.Date).format('DD/MM/YYYY')}</li>\r\n                                        </ul>\r\n                                    </div>\r\n\r\n                                    <h3>\r\n                                        <Link href=\"/blog/[slug]\" as={`/blog/${post.Slug}`}>\r\n                                            <a>{post.Title}</a>\r\n                                        </Link>\r\n                                    </h3>\r\n\r\n                                    <p>{post.Preview}</p>\r\n                                    \r\n                                    <Link href=\"/blog/[slug]\" as={`/blog/${post.Slug}`}>\r\n                                        <a className=\"learn-more-btn\">\r\n                                            Leia mais <i className=\"flaticon-add\"></i>\r\n                                        </a>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        )\r\n                        })\r\n                    }\r\n\r\n                        {/* Pagination */}\r\n                        <div className=\"col-lg-12 col-sm-12\">\r\n                            <div className=\"pagination-area\">\r\n                                <button onClick={() => this.setState({page: 0})}>\r\n                                    <a className=\"prev page-numbers\">\r\n                                        <i className=\"fas fa-angle-double-left\"></i>\r\n                                    </a>\r\n                                </button>\r\n                                {\r\n                                    pagItems\r\n                                }\r\n                                <button onClick={() => this.setState({page: pagItems.length - 1})}>\r\n                                    <a className=\"next page-numbers\">\r\n                                        <i className=\"fas fa-angle-double-right\"></i>\r\n                                    </a>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BlogThreeGrid;"]},"metadata":{},"sourceType":"module"}