{"ast":null,"code":"var _jsxFileName = \"/Users/vitor/Repositories/Sharing/site/components/Blog/BlogThreeGrid.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport fetch from 'node-fetch';\n\nconst moment = require('moment');\n\nconst API_ENDPOINT = 'https://www.notion.so/api/v3';\nconst NOTION_TOKEN = '38823e20575022e59fa48474c8a7db5c184b4c08778f5fb2111867a5a344f0da0fd58de3098622b7714189bb7501eb745d13eade0ed4b76730d8e000f4dfceea89cc7ad703432a87188d39bc7fba';\nconst NOTION_BLOG_ID = 'f8cf0c8645db4088be56a1c37286fee2';\n\nclass BlogThreeGrid extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      const posts = await this.getStaticProps();\n      this.setState({\n        posts: posts.props.posts.filter(post => post.Published)\n      });\n    });\n\n    _defineProperty(this, \"getAllPosts\", async () => {\n      const allPosts = await fetch(`https://notion-api.splitbee.io/v1/table/${NOTION_BLOG_ID}`).then(res => res.json());\n      console.log('ALLPOSTS', allPosts);\n      return allPosts;\n    });\n\n    _defineProperty(this, \"getStaticProps\", async () => {\n      const posts = await this.getAllPosts();\n      return {\n        props: {\n          posts\n        }\n      };\n    });\n\n    this.state = {\n      posts: [],\n      page: 0,\n      category: '',\n      postsForPage: 12\n    };\n  }\n\n  render() {\n    console.log('THISPOSTS', this.state.posts);\n    const {\n      page,\n      postsForPage\n    } = this.state;\n    const postIndex = page * postsForPage;\n    const posts = this.state.posts.filter(post => {\n      return this.state.category === '' ? true : post.Category.includes(this.state.category);\n    });\n    const pagItems = [];\n\n    for (let i = 0; i < posts.length / this.state.postsForPage; i++) {\n      let className = i === this.state.page ? 'page-numbers current' : 'page-numbers';\n      pagItems.push(__jsx(\"button\", {\n        onClick: () => this.setState({\n          page: i\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, i + 1)));\n    }\n\n    const categories = this.state.posts.reduce((acc, curr) => {\n      curr.Category.forEach(category => {\n        if (!acc.includes(category)) acc.push(category);\n      });\n      return acc;\n    }, []);\n    return __jsx(\"section\", {\n      className: \"blog-area ptb-110\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"category-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"category-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Categorias:\"), __jsx(\"div\", {\n      className: \"category-items-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      onClick: () => this.setState({\n        category: '',\n        page: 0\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: this.state.category === '' ? \"blog-category current\" : \"blog-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Todas\")), categories.map(category => __jsx(\"button\", {\n      onClick: () => this.setState({\n        category,\n        page: 0\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: this.state.category === category ? \"blog-category current\" : \"blog-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, category))))), __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, posts.length === 0 ? __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Carregando...\") : posts.slice(postIndex, postIndex + postsForPage).filter(post => {\n      return this.state.category === '' ? true : post.Category.includes(this.state.category);\n    }).map(post => {\n      const image = post.image && post.image[0] && post.image[0].url || '';\n      return __jsx(\"div\", {\n        className: \"col-lg-4 col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"single-blog-post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"entry-thumbnail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, __jsx(Link, {\n        href: \"/[slug]\",\n        as: `/${post.Slug}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: image,\n        alt: \"image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })))), __jsx(\"div\", {\n        className: \"entry-post-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"entry-meta\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, post.Authors.map(author => {\n        const authorArray = author.split('@');\n        const authorName = authorArray[0];\n        const authorURL = authorArray[1];\n        return __jsx(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, __jsx(Link, {\n          href: authorURL,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          target: \"_blank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, authorName)));\n      }), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, moment(post.Date).format('DD/MM/YYYY')))), __jsx(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, __jsx(Link, {\n        href: \"/[slug]\",\n        as: `/${post.Slug}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, post.Title))), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, post.Preview), __jsx(Link, {\n        href: \"/[slug]\",\n        as: `/${post.Slug}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        className: \"learn-more-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Leia mais \", __jsx(\"i\", {\n        className: \"flaticon-add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }))))));\n    }), __jsx(\"div\", {\n      className: \"col-lg-12 col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"pagination-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      onClick: () => this.setState({\n        page: 0\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      className: \"prev page-numbers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"fas fa-angle-double-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }))), pagItems, __jsx(\"button\", {\n      onClick: () => this.setState({\n        page: pagItems.length - 1\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      className: \"next page-numbers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"fas fa-angle-double-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nexport default BlogThreeGrid;","map":{"version":3,"sources":["/Users/vitor/Repositories/Sharing/site/components/Blog/BlogThreeGrid.js"],"names":["React","Component","Link","fetch","moment","require","API_ENDPOINT","NOTION_TOKEN","NOTION_BLOG_ID","BlogThreeGrid","constructor","props","posts","getStaticProps","setState","filter","post","Published","allPosts","then","res","json","console","log","getAllPosts","state","page","category","postsForPage","render","postIndex","Category","includes","pagItems","i","length","className","push","categories","reduce","acc","curr","forEach","map","slice","image","url","Slug","Authors","author","authorArray","split","authorName","authorURL","Date","format","Title","Preview"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,MAAMC,YAAY,GAAG,8BAArB;AACA,MAAMC,YAAY,GAAG,8JAArB;AACA,MAAMC,cAAc,GAAG,kCAAvB;;AAEA,MAAMC,aAAN,SAA4BR,SAA5B,CAAsC;AAClCS,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;;AADgB,+CASA,YAAY;AAC5B,YAAMC,KAAK,GAAG,MAAM,KAAKC,cAAL,EAApB;AACA,WAAKC,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAAEA,KAAK,CAACD,KAAN,CAAYC,KAAZ,CAAkBG,MAAlB,CAAyBC,IAAI,IAAIA,IAAI,CAACC,SAAtC;AAAT,OAAd;AACH,KAZmB;;AAAA,yCAaN,YAAY;AACtB,YAAMC,QAAQ,GAAG,MAAMf,KAAK,CAC3B,2CAA0CK,cAAe,EAD9B,CAAL,CAEvBW,IAFuB,CAEjBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFS,CAAvB;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,QAAxB;AACA,aAAOA,QAAP;AACH,KAnBmB;;AAAA,4CAoBH,YAAY;AAC3B,YAAMN,KAAK,GAAG,MAAM,KAAKY,WAAL,EAApB;AACA,aAAO;AACLb,QAAAA,KAAK,EAAE;AACLC,UAAAA;AADK;AADF,OAAP;AAKD,KA3BmB;;AAEhB,SAAKa,KAAL,GAAa;AACXb,MAAAA,KAAK,EAAE,EADI;AAEXc,MAAAA,IAAI,EAAE,CAFK;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,YAAY,EAAE;AAJH,KAAb;AAMD;;AAoBHC,EAAAA,MAAM,GAAG;AACLP,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKE,KAAL,CAAWb,KAApC;AACA,UAAM;AAAEc,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAyB,KAAKH,KAApC;AACA,UAAMK,SAAS,GAAGJ,IAAI,GAAGE,YAAzB;AACA,UAAMhB,KAAK,GAAG,KAAKa,KAAL,CAAWb,KAAX,CACTG,MADS,CACFC,IAAI,IAAI;AACZ,aAAO,KAAKS,KAAL,CAAWE,QAAX,KAAwB,EAAxB,GAA6B,IAA7B,GAAoCX,IAAI,CAACe,QAAL,CAAcC,QAAd,CAAuB,KAAKP,KAAL,CAAWE,QAAlC,CAA3C;AACH,KAHS,CAAd;AAIA,UAAMM,QAAQ,GAAG,EAAjB;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGtB,KAAK,CAACuB,MAAN,GAAa,KAAKV,KAAL,CAAWG,YAA3C,EAAyDM,CAAC,EAA1D,EAA6D;AACzD,UAAIE,SAAS,GAAGF,CAAC,KAAK,KAAKT,KAAL,CAAWC,IAAjB,GAAyB,sBAAzB,GAAkD,cAAlE;AACAO,MAAAA,QAAQ,CAACI,IAAT,CACI;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKvB,QAAL,CAAc;AAACY,UAAAA,IAAI,EAAEQ;AAAP,SAAd,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAEE,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BF,CAAC,GAAC,CAA5B,CADJ,CADJ;AAKH;;AACD,UAAMI,UAAU,GAAG,KAAKb,KAAL,CAAWb,KAAX,CAAiB2B,MAAjB,CAAwB,CAACC,GAAD,EAAMC,IAAN,KAAe;AACtDA,MAAAA,IAAI,CAACV,QAAL,CAAcW,OAAd,CAAsBf,QAAQ,IAAI;AAC9B,YAAI,CAACa,GAAG,CAACR,QAAJ,CAAaL,QAAb,CAAL,EAA6Ba,GAAG,CAACH,IAAJ,CAASV,QAAT;AAChC,OAFD;AAGA,aAAOa,GAAP;AACH,KALkB,EAKhB,EALgB,CAAnB;AAMA,WACI;AAAS,MAAA,SAAS,EAAC,mBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAI,MAAM,KAAK1B,QAAL,CAAc;AAACa,QAAAA,QAAQ,EAAE,EAAX;AAAeD,QAAAA,IAAI,EAAE;AAArB,OAAd,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAE,KAAKD,KAAL,CAAWE,QAAX,KAAwB,EAAxB,GAA6B,uBAA7B,GAAuD,eAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,EAKQW,UAAU,CAACK,GAAX,CAAehB,QAAQ,IACnB;AAAQ,MAAA,OAAO,EAAI,MAAM,KAAKb,QAAL,CAAc;AAACa,QAAAA,QAAD;AAAWD,QAAAA,IAAI,EAAE;AAAjB,OAAd,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAE,KAAKD,KAAL,CAAWE,QAAX,KAAwBA,QAAxB,GAAmC,uBAAnC,GAA6D,eAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,QADL,CADJ,CADJ,CALR,CAFJ,CADJ,EAiBI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIf,KAAK,CAACuB,MAAN,KAAiB,CAAjB,GAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAtB,GAAkDvB,KAAK,CAACgC,KAAN,CAAYd,SAAZ,EAAuBA,SAAS,GAAGF,YAAnC,EAC7Cb,MAD6C,CACtCC,IAAI,IAAI;AACZ,aAAO,KAAKS,KAAL,CAAWE,QAAX,KAAwB,EAAxB,GAA6B,IAA7B,GAAoCX,IAAI,CAACe,QAAL,CAAcC,QAAd,CAAuB,KAAKP,KAAL,CAAWE,QAAlC,CAA3C;AACH,KAH6C,EAI7CgB,GAJ6C,CAIxC3B,IAAD,IAAU;AACf,YAAM6B,KAAK,GAAG7B,IAAI,CAAC6B,KAAL,IAAc7B,IAAI,CAAC6B,KAAL,CAAW,CAAX,CAAd,IAA+B7B,IAAI,CAAC6B,KAAL,CAAW,CAAX,EAAcC,GAA7C,IAAoD,EAAlE;AACA,aACA;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,SAAX;AAAqB,QAAA,EAAE,EAAG,IAAG9B,IAAI,CAAC+B,IAAK,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAEF,KAAV;AAAiB,QAAA,GAAG,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,CADJ,EASI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ7B,IAAI,CAACgC,OAAL,CAAaL,GAAb,CAAiBM,MAAM,IAAI;AACvB,cAAMC,WAAW,GAAGD,MAAM,CAACE,KAAP,CAAa,GAAb,CAApB;AACA,cAAMC,UAAU,GAAGF,WAAW,CAAC,CAAD,CAA9B;AACA,cAAMG,SAAS,GAAGH,WAAW,CAAC,CAAD,CAA7B;AACA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,IAAD;AAAM,UAAA,IAAI,EAAEG,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,MAAM,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoBD,UAApB,CADJ,CADJ,CADJ;AAOH,OAXD,CAFR,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKhD,MAAM,CAACY,IAAI,CAACsC,IAAN,CAAN,CAAkBC,MAAlB,CAAyB,YAAzB,CAAL,CAfJ,CADJ,CADA,EAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,SAAX;AAAqB,QAAA,EAAE,EAAG,IAAGvC,IAAI,CAAC+B,IAAK,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI/B,IAAI,CAACwC,KAAT,CADJ,CADJ,CArBA,EA2BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIxC,IAAI,CAACyC,OAAT,CA3BA,EA6BA,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,SAAX;AAAqB,QAAA,EAAE,EAAG,IAAGzC,IAAI,CAAC+B,IAAK,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACc;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADd,CADJ,CA7BA,CATJ,CADJ,CADA;AAiDH,KAvDiD,CAFtD,EA6DI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKjC,QAAL,CAAc;AAACY,QAAAA,IAAI,EAAE;AAAP,OAAd,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,0BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,EAOQO,QAPR,EASI;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKnB,QAAL,CAAc;AAACY,QAAAA,IAAI,EAAEO,QAAQ,CAACE,MAAT,GAAkB;AAAzB,OAAd,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CATJ,CADJ,CA7DJ,CAjBJ,CADJ,CADJ;AAqGH;;AAzJiC;;AA4JtC,eAAe1B,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Link from 'next/link';\r\nimport fetch from 'node-fetch'\r\n\r\nconst moment = require('moment')\r\n\r\nconst API_ENDPOINT = 'https://www.notion.so/api/v3'\r\nconst NOTION_TOKEN = '38823e20575022e59fa48474c8a7db5c184b4c08778f5fb2111867a5a344f0da0fd58de3098622b7714189bb7501eb745d13eade0ed4b76730d8e000f4dfceea89cc7ad703432a87188d39bc7fba'\r\nconst NOTION_BLOG_ID = 'f8cf0c8645db4088be56a1c37286fee2'\r\n\r\nclass BlogThreeGrid extends Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n          posts: [],\r\n          page: 0,\r\n          category: '',\r\n          postsForPage: 12\r\n        }\r\n      }\r\n    componentDidMount = async () => {\r\n        const posts = await this.getStaticProps()\r\n        this.setState({ posts: posts.props.posts.filter(post => post.Published) })\r\n    }\r\n    getAllPosts = async () => {\r\n        const allPosts = await fetch(\r\n        `https://notion-api.splitbee.io/v1/table/${NOTION_BLOG_ID}`\r\n      ).then((res) => res.json());\r\n        console.log('ALLPOSTS', allPosts)\r\n        return allPosts\r\n    }\r\n    getStaticProps = async () => {\r\n      const posts = await this.getAllPosts()\r\n      return {\r\n        props: {\r\n          posts\r\n        },\r\n      };\r\n    }\r\n    render() {\r\n        console.log('THISPOSTS', this.state.posts)\r\n        const { page, postsForPage } = this.state\r\n        const postIndex = page * postsForPage\r\n        const posts = this.state.posts\r\n            .filter(post => {\r\n                return this.state.category === '' ? true : post.Category.includes(this.state.category)\r\n            })\r\n        const pagItems = []\r\n        for(let i = 0; i < posts.length/this.state.postsForPage; i++){\r\n            let className = i === this.state.page ?  'page-numbers current' : 'page-numbers'\r\n            pagItems.push(\r\n                <button onClick={() => this.setState({page: i})}>\r\n                    <a className={className}>{i+1}</a>\r\n                </button>\r\n            )\r\n        }\r\n        const categories = this.state.posts.reduce((acc, curr) => {\r\n            curr.Category.forEach(category => {\r\n                if (!acc.includes(category)) acc.push(category)\r\n            })\r\n            return acc\r\n        }, [])\r\n        return (\r\n            <section className=\"blog-area ptb-110\">\r\n                <div className=\"container\">\r\n                    <div className=\"category-container\">\r\n                        <div className=\"category-title\">Categorias:</div>\r\n                        <div className='category-items-container'>\r\n                            <button onClick = {() => this.setState({category: '', page: 0})}>\r\n                                <div className={this.state.category === '' ? \"blog-category current\" : \"blog-category\"}>Todas</div>\r\n                            </button>\r\n                            {\r\n                                categories.map(category => (\r\n                                    <button onClick = {() => this.setState({category, page: 0})}>\r\n                                        <div className={this.state.category === category ? \"blog-category current\" : \"blog-category\"}>\r\n                                            {category}\r\n                                        </div>\r\n                                    </button>))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    {\r\n                        posts.length === 0 ? (<div>Carregando...</div>) : posts.slice(postIndex, postIndex + postsForPage)\r\n                            .filter(post => {\r\n                                return this.state.category === '' ? true : post.Category.includes(this.state.category)\r\n                            })\r\n                            .map((post) => {\r\n                            const image = post.image && post.image[0] && post.image[0].url || ''\r\n                            return (\r\n                            <div className=\"col-lg-4 col-md-6\">\r\n                                <div className=\"single-blog-post\">\r\n                                    <div className=\"entry-thumbnail\">\r\n                                        <Link href=\"/[slug]\" as={`/${post.Slug}`}>\r\n                                            <a>\r\n                                                <img src={image} alt=\"image\" />\r\n                                            </a>\r\n                                        </Link>\r\n                                    </div>\r\n\r\n                                    <div className=\"entry-post-content\">\r\n                                    <div className=\"entry-meta\">\r\n                                        <ul>\r\n                                            {\r\n                                                post.Authors.map(author => {\r\n                                                    const authorArray = author.split('@')\r\n                                                    const authorName = authorArray[0]\r\n                                                    const authorURL = authorArray[1]\r\n                                                    return (\r\n                                                        <li>\r\n                                                            <Link href={authorURL}>\r\n                                                                <a target=\"_blank\">{authorName}</a>\r\n                                                            </Link>\r\n                                                        </li>\r\n                                                        )\r\n                                                })\r\n                                            }\r\n                                            <li>{moment(post.Date).format('DD/MM/YYYY')}</li>\r\n                                        </ul>\r\n                                    </div>\r\n\r\n                                    <h3>\r\n                                        <Link href=\"/[slug]\" as={`/${post.Slug}`}>\r\n                                            <a>{post.Title}</a>\r\n                                        </Link>\r\n                                    </h3>\r\n\r\n                                    <p>{post.Preview}</p>\r\n                                    \r\n                                    <Link href=\"/[slug]\" as={`/${post.Slug}`}>\r\n                                        <a className=\"learn-more-btn\">\r\n                                            Leia mais <i className=\"flaticon-add\"></i>\r\n                                        </a>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        )\r\n                        })\r\n                    }\r\n\r\n                        {/* Pagination */}\r\n                        <div className=\"col-lg-12 col-sm-12\">\r\n                            <div className=\"pagination-area\">\r\n                                <button onClick={() => this.setState({page: 0})}>\r\n                                    <a className=\"prev page-numbers\">\r\n                                        <i className=\"fas fa-angle-double-left\"></i>\r\n                                    </a>\r\n                                </button>\r\n                                {\r\n                                    pagItems\r\n                                }\r\n                                <button onClick={() => this.setState({page: pagItems.length - 1})}>\r\n                                    <a className=\"next page-numbers\">\r\n                                        <i className=\"fas fa-angle-double-right\"></i>\r\n                                    </a>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BlogThreeGrid;"]},"metadata":{},"sourceType":"module"}